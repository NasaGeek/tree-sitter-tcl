
================================================================================
Commands
================================================================================

echo "hello"

set hi "heelo"

--------------------------------------------------------------------------------

(source_file
  (command
    (simple_word)
    (word_list
      (quoted_word)))
  (set
    (simple_word)
    (quoted_word)))

================================================================================
Procedures
================================================================================

proc foo {arg1 arg2} {
    echo "hello"
    echo "word$hi \$bye word"
}

--------------------------------------------------------------------------------

(source_file
  (procedure
    (simple_word)
    (arguments
      (argument
        (simple_word))
      (argument
        (simple_word)))
    (script
      (command
        (simple_word)
        (word_list
          (quoted_word)))
      (command
        (simple_word)
        (word_list
          (quoted_word
            (variable_substitution
              (id))
            (escaped_character)))))))

================================================================================
Comments
================================================================================

# this is a comment

--------------------------------------------------------------------------------

(source_file
  (comment))

================================================================================
Foreach
================================================================================

foreach a {1 2 3 4 5} {
    put $i
}

--------------------------------------------------------------------------------

(source_file
  (foreach
   (foreach_clauses
    (foreach_clause
     (simple_word)
     (braced_word)))
    (script
      (command
        (simple_word)
        (word_list
          (variable_substitution
            (id)))))))

================================================================================
Foreach multi
================================================================================

foreach {a b} {1 2 4 5} {
    put $i
}

--------------------------------------------------------------------------------
    (source_file
      (foreach
        (foreach_clauses
          (foreach_clause
            (braced_word)
            (braced_word)))
        (script
          (command
            (simple_word)
            (word_list
              (variable_substitution
                (id)))))))

================================================================================
Foreach multimulti
================================================================================

foreach a {1 2 4 5} b {6 7 8 9} {
    put $i
}

--------------------------------------------------------------------------------

    (source_file
      (foreach
        (foreach_clauses
          (foreach_clause
            (simple_word)
            (braced_word))
          (foreach_clause
            (simple_word)
            (braced_word)))
        (script
          (command
            (simple_word)
            (word_list
              (variable_substitution
                (id)))))))

================================================================================
Conditionals
================================================================================

if 1 then {
    echo hi
} elseif {t} {
    echo hi
} else {
    echo bye
}

--------------------------------------------------------------------------------
    (source_file
      (conditional
        (expr
          (simple_word))
        (script
          (command
            (simple_word)
            (word_list
              (simple_word))))
        (elseif
          (expr
            (bool_literal))
          (script
            (command
              (simple_word)
              (word_list
                (simple_word)))))
        (else
          (script
            (command
              (simple_word)
              (word_list
                (simple_word)))))))

================================================================================
Command substitution
================================================================================

echo [echo hello]

--------------------------------------------------------------------------------
    (source_file
      (command
        (simple_word)
        (word_list
          (command_substitution
            (command
              (simple_word)
              (word_list
                (simple_word)))))))

================================================================================
Escaped string
================================================================================

echo "word$hi \$bye word"

--------------------------------------------------------------------------------
    (source_file
      (command
        (simple_word)
        (word_list
          (quoted_word
            (variable_substitution
              (id))
            (escaped_character)))))


================================================================================
Array set
================================================================================

set arr(my) 0

--------------------------------------------------------------------------------
    (source_file
      (set
        (varname
          (array_name
            (simple_word)
            (array_index
              (simple_word))))
        (simple_word)))

================================================================================
Array ref
================================================================================

puts $arr(my)

--------------------------------------------------------------------------------
    (source_file
      (command
        (simple_word)
        (word_list
          (variable_substitution
            (id)
            (array_index
              (simple_word))))))


================================================================================
Namespaced vars
================================================================================

puts $::ns::var
lassign [list 1] ::ns::var(key)

--------------------------------------------------------------------------------
    (source_file
      (command
        (simple_word)
        (word_list
          (variable_substitution
            (id))))
      (command
        (simple_word)
        (word_list
          (command_substitution
            (command
              (simple_word)
              (word_list
                (simple_word))))
          (varname
            (array_name
              (simple_word)
              (array_index
                (simple_word)))))))

================================================================================
Failing Exprs
:error
================================================================================
# Valid (but I wouldn't say idiomatic) Tcl that we can't parse.
expr 1
expr {1+1}

================================================================================
Exprs
================================================================================

expr {1 + 1}
expr {3. / 4e-4}
expr {t eq tr}
expr { nO || Of }
expr { inf + nan - (1) + [p 1] }
expr { {} eq {123} }
expr { $arr(abc) eq [a ::ar(xyz)] }
expr { func() eq 0 }
expr { spaceyfunc   ( "yes", [this], {works} ) }

--------------------------------------------------------------------------------
    (source_file
      (expr_cmd
        (expr
          (binop_expr
            (int_literal)
            (int_literal))))
      (expr_cmd
        (expr
          (binop_expr
            (float_literal)
            (float_literal))))
      (expr_cmd
        (expr
          (binop_expr
            (bool_literal)
            (bool_literal))))
      (expr_cmd
        (expr
          (binop_expr
            (bool_literal)
            (bool_literal))))
      (expr_cmd
        (expr
          (binop_expr
            (binop_expr
              (binop_expr
                (float_literal)
                (float_literal))
              (int_literal))
            (command_substitution
              (command
                (simple_word)
                (word_list
                  (simple_word)))))))
      (expr_cmd
        (expr
          (binop_expr
            (braced_word)
            (braced_word))))
      (expr_cmd
        (expr
          (binop_expr
            (variable_substitution
              (id)
              (array_index
                (simple_word)))
            (command_substitution
              (command
                (simple_word)
                (word_list
                  (varname
                    (array_name
                      (simple_word)
                      (array_index
                        (simple_word))))))))))
      (expr_cmd
        (expr
          (binop_expr
            (func_call
              (simple_word))
            (int_literal))))
      (expr_cmd
        (expr
          (func_call
            (simple_word)
            (func_args
              (quoted_word)
              (command_substitution
                (command
                  (simple_word)))
              (braced_word))))))

================================================================================
Exprs in other places
================================================================================

if $a {
} elseif {1 eq 2} {}
if {
1
} {
puts "good"
}
while f {}

--------------------------------------------------------------------------------
    (source_file
      (conditional
        (expr
          (variable_substitution
            (id)))
        (script)
        (elseif
          (expr
            (binop_expr
              (int_literal)
              (int_literal)))
          (script)))
      (conditional
        (expr
          (int_literal))
        (script
          (command
            (simple_word)
            (word_list
              (quoted_word)))))
      (while
        (expr
          (simple_word))
        (script)))

================================================================================
Try
================================================================================

try { some code
} on error {} {
} on continue {var1 var2} {
  puts "continue"
} trap {PATTERN} {} {
} finally { done }

--------------------------------------------------------------------------------
    (source_file
      (try
        (script
          (command
            (simple_word)
            (word_list
              (simple_word))))
        (braced_word)
        (script)
        (braced_word)
        (script
          (command
            (simple_word)
            (word_list
              (quoted_word))))
        (braced_word)
        (braced_word)
        (script)
        (finally
          (script
            (command
              (simple_word))))))

================================================================================
For
================================================================================

for {set a 0} {$a < 10} {incr a} { puts $a }
for {set a 0} {$a < 10} {} {
}

--------------------------------------------------------------------------------
    (source_file
      (for
        (script
          (set
            (simple_word)
            (simple_word)))
        (expr
          (binop_expr
            (variable_substitution
              (id))
            (int_literal)))
        (script
          (command
            (simple_word)
            (word_list
              (simple_word))))
        (script
          (command
            (simple_word)
            (word_list
              (variable_substitution
                (id))))))
      (for
        (script
          (set
            (simple_word)
            (simple_word)))
        (expr
          (binop_expr
            (variable_substitution
              (id))
            (int_literal)))
        (script)
        (script)))

================================================================================
Switch
================================================================================

switch -glob aaab {
    b       -
    r_rr     {[rrr]}
    *      {a}
    default {}
}

--------------------------------------------------------------------------------

    (source_file
      (switch
        (simple_word)
        (simple_word)
        (switch_body
          (simple_word)
          (script)
          (simple_word)
          (script
            (command
              (command_substitution
                (command
                  (simple_word)))))
          (simple_word)
          (script
            (command
              (simple_word)))
          (simple_word)
          (script))))

